//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public ThreeTypesOfDiabetesGameAudioListenerComponent threeTypesOfDiabetesGameAudioListener { get { return (ThreeTypesOfDiabetesGameAudioListenerComponent)GetComponent(GameComponentsLookup.ThreeTypesOfDiabetesGameAudioListener); } }
    public bool hasThreeTypesOfDiabetesGameAudioListener { get { return HasComponent(GameComponentsLookup.ThreeTypesOfDiabetesGameAudioListener); } }

    public void AddThreeTypesOfDiabetesGameAudioListener(System.Collections.Generic.List<IThreeTypesOfDiabetesGameAudioListener> newValue) {
        var index = GameComponentsLookup.ThreeTypesOfDiabetesGameAudioListener;
        var component = (ThreeTypesOfDiabetesGameAudioListenerComponent)CreateComponent(index, typeof(ThreeTypesOfDiabetesGameAudioListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceThreeTypesOfDiabetesGameAudioListener(System.Collections.Generic.List<IThreeTypesOfDiabetesGameAudioListener> newValue) {
        var index = GameComponentsLookup.ThreeTypesOfDiabetesGameAudioListener;
        var component = (ThreeTypesOfDiabetesGameAudioListenerComponent)CreateComponent(index, typeof(ThreeTypesOfDiabetesGameAudioListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveThreeTypesOfDiabetesGameAudioListener() {
        RemoveComponent(GameComponentsLookup.ThreeTypesOfDiabetesGameAudioListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherThreeTypesOfDiabetesGameAudioListener;

    public static Entitas.IMatcher<GameEntity> ThreeTypesOfDiabetesGameAudioListener {
        get {
            if (_matcherThreeTypesOfDiabetesGameAudioListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ThreeTypesOfDiabetesGameAudioListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherThreeTypesOfDiabetesGameAudioListener = matcher;
            }

            return _matcherThreeTypesOfDiabetesGameAudioListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddThreeTypesOfDiabetesGameAudioListener(IThreeTypesOfDiabetesGameAudioListener value) {
        var listeners = hasThreeTypesOfDiabetesGameAudioListener
            ? threeTypesOfDiabetesGameAudioListener.value
            : new System.Collections.Generic.List<IThreeTypesOfDiabetesGameAudioListener>();
        listeners.Add(value);
        ReplaceThreeTypesOfDiabetesGameAudioListener(listeners);
    }

    public void RemoveThreeTypesOfDiabetesGameAudioListener(IThreeTypesOfDiabetesGameAudioListener value, bool removeComponentWhenEmpty = true) {
        var listeners = threeTypesOfDiabetesGameAudioListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveThreeTypesOfDiabetesGameAudioListener();
        } else {
            ReplaceThreeTypesOfDiabetesGameAudioListener(listeners);
        }
    }
}
