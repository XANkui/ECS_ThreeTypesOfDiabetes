//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public InteractionDemo.SpriteComponent interactionDemoSprite { get { return (InteractionDemo.SpriteComponent)GetComponent(GameComponentsLookup.InteractionDemoSprite); } }
    public bool hasInteractionDemoSprite { get { return HasComponent(GameComponentsLookup.InteractionDemoSprite); } }

    public void AddInteractionDemoSprite(string newSpritePath) {
        var index = GameComponentsLookup.InteractionDemoSprite;
        var component = (InteractionDemo.SpriteComponent)CreateComponent(index, typeof(InteractionDemo.SpriteComponent));
        component.spritePath = newSpritePath;
        AddComponent(index, component);
    }

    public void ReplaceInteractionDemoSprite(string newSpritePath) {
        var index = GameComponentsLookup.InteractionDemoSprite;
        var component = (InteractionDemo.SpriteComponent)CreateComponent(index, typeof(InteractionDemo.SpriteComponent));
        component.spritePath = newSpritePath;
        ReplaceComponent(index, component);
    }

    public void RemoveInteractionDemoSprite() {
        RemoveComponent(GameComponentsLookup.InteractionDemoSprite);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherInteractionDemoSprite;

    public static Entitas.IMatcher<GameEntity> InteractionDemoSprite {
        get {
            if (_matcherInteractionDemoSprite == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.InteractionDemoSprite);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherInteractionDemoSprite = matcher;
            }

            return _matcherInteractionDemoSprite;
        }
    }
}
