//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public ThreeTypesOfDiabetesGameItemIndexListenerComponent threeTypesOfDiabetesGameItemIndexListener { get { return (ThreeTypesOfDiabetesGameItemIndexListenerComponent)GetComponent(GameComponentsLookup.ThreeTypesOfDiabetesGameItemIndexListener); } }
    public bool hasThreeTypesOfDiabetesGameItemIndexListener { get { return HasComponent(GameComponentsLookup.ThreeTypesOfDiabetesGameItemIndexListener); } }

    public void AddThreeTypesOfDiabetesGameItemIndexListener(System.Collections.Generic.List<IThreeTypesOfDiabetesGameItemIndexListener> newValue) {
        var index = GameComponentsLookup.ThreeTypesOfDiabetesGameItemIndexListener;
        var component = (ThreeTypesOfDiabetesGameItemIndexListenerComponent)CreateComponent(index, typeof(ThreeTypesOfDiabetesGameItemIndexListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceThreeTypesOfDiabetesGameItemIndexListener(System.Collections.Generic.List<IThreeTypesOfDiabetesGameItemIndexListener> newValue) {
        var index = GameComponentsLookup.ThreeTypesOfDiabetesGameItemIndexListener;
        var component = (ThreeTypesOfDiabetesGameItemIndexListenerComponent)CreateComponent(index, typeof(ThreeTypesOfDiabetesGameItemIndexListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveThreeTypesOfDiabetesGameItemIndexListener() {
        RemoveComponent(GameComponentsLookup.ThreeTypesOfDiabetesGameItemIndexListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherThreeTypesOfDiabetesGameItemIndexListener;

    public static Entitas.IMatcher<GameEntity> ThreeTypesOfDiabetesGameItemIndexListener {
        get {
            if (_matcherThreeTypesOfDiabetesGameItemIndexListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ThreeTypesOfDiabetesGameItemIndexListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherThreeTypesOfDiabetesGameItemIndexListener = matcher;
            }

            return _matcherThreeTypesOfDiabetesGameItemIndexListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddThreeTypesOfDiabetesGameItemIndexListener(IThreeTypesOfDiabetesGameItemIndexListener value) {
        var listeners = hasThreeTypesOfDiabetesGameItemIndexListener
            ? threeTypesOfDiabetesGameItemIndexListener.value
            : new System.Collections.Generic.List<IThreeTypesOfDiabetesGameItemIndexListener>();
        listeners.Add(value);
        ReplaceThreeTypesOfDiabetesGameItemIndexListener(listeners);
    }

    public void RemoveThreeTypesOfDiabetesGameItemIndexListener(IThreeTypesOfDiabetesGameItemIndexListener value, bool removeComponentWhenEmpty = true) {
        var listeners = threeTypesOfDiabetesGameItemIndexListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveThreeTypesOfDiabetesGameItemIndexListener();
        } else {
            ReplaceThreeTypesOfDiabetesGameItemIndexListener(listeners);
        }
    }
}
