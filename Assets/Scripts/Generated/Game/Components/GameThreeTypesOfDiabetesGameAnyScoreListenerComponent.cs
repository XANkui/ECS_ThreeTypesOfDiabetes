//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public ThreeTypesOfDiabetesGameAnyScoreListenerComponent threeTypesOfDiabetesGameAnyScoreListener { get { return (ThreeTypesOfDiabetesGameAnyScoreListenerComponent)GetComponent(GameComponentsLookup.ThreeTypesOfDiabetesGameAnyScoreListener); } }
    public bool hasThreeTypesOfDiabetesGameAnyScoreListener { get { return HasComponent(GameComponentsLookup.ThreeTypesOfDiabetesGameAnyScoreListener); } }

    public void AddThreeTypesOfDiabetesGameAnyScoreListener(System.Collections.Generic.List<IThreeTypesOfDiabetesGameAnyScoreListener> newValue) {
        var index = GameComponentsLookup.ThreeTypesOfDiabetesGameAnyScoreListener;
        var component = (ThreeTypesOfDiabetesGameAnyScoreListenerComponent)CreateComponent(index, typeof(ThreeTypesOfDiabetesGameAnyScoreListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceThreeTypesOfDiabetesGameAnyScoreListener(System.Collections.Generic.List<IThreeTypesOfDiabetesGameAnyScoreListener> newValue) {
        var index = GameComponentsLookup.ThreeTypesOfDiabetesGameAnyScoreListener;
        var component = (ThreeTypesOfDiabetesGameAnyScoreListenerComponent)CreateComponent(index, typeof(ThreeTypesOfDiabetesGameAnyScoreListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveThreeTypesOfDiabetesGameAnyScoreListener() {
        RemoveComponent(GameComponentsLookup.ThreeTypesOfDiabetesGameAnyScoreListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherThreeTypesOfDiabetesGameAnyScoreListener;

    public static Entitas.IMatcher<GameEntity> ThreeTypesOfDiabetesGameAnyScoreListener {
        get {
            if (_matcherThreeTypesOfDiabetesGameAnyScoreListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ThreeTypesOfDiabetesGameAnyScoreListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherThreeTypesOfDiabetesGameAnyScoreListener = matcher;
            }

            return _matcherThreeTypesOfDiabetesGameAnyScoreListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddThreeTypesOfDiabetesGameAnyScoreListener(IThreeTypesOfDiabetesGameAnyScoreListener value) {
        var listeners = hasThreeTypesOfDiabetesGameAnyScoreListener
            ? threeTypesOfDiabetesGameAnyScoreListener.value
            : new System.Collections.Generic.List<IThreeTypesOfDiabetesGameAnyScoreListener>();
        listeners.Add(value);
        ReplaceThreeTypesOfDiabetesGameAnyScoreListener(listeners);
    }

    public void RemoveThreeTypesOfDiabetesGameAnyScoreListener(IThreeTypesOfDiabetesGameAnyScoreListener value, bool removeComponentWhenEmpty = true) {
        var listeners = threeTypesOfDiabetesGameAnyScoreListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveThreeTypesOfDiabetesGameAnyScoreListener();
        } else {
            ReplaceThreeTypesOfDiabetesGameAnyScoreListener(listeners);
        }
    }
}
